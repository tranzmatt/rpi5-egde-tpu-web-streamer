# Built using https://coral.withgoogle.com/tutorials/accelerator/
#FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-python
FROM balenalib/raspberrypi3-64-debian:bookworm-build

# Need udev for some dynamic dev nodes
ENV UDEV=1

WORKDIR /usr/src

RUN echo "deb-src http://archive.raspberrypi.org/debian bullseye main ui" >> /etc/apt/sources.list.d/raspi.list
# Install some utilities we will need
RUN apt-get update && \
    apt-get -qqy install build-essential wget curl feh ffmpeg git make \
        python3-picamera2 python3-libcamera libcamera-apps libcamera-dev apt-utils libraspberrypi-dev && \
    apt-get build-dep -y ffmpeg && \
    apt-get source ffmpeg=$(apt-cache policy ffmpeg | grep -oP 'Installed: \K.*') && \
    cd $(find . -maxdepth 1 -type d -name "ffmpeg-*" -print -quit)
#    ./configure && \
#    make


# Set our working directory
WORKDIR /usr/src/app

COPY requirements.txt requirements.txt
RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
    python3 get-pip.py && \
    rm get-pip.py
RUN python3 -m pip install -U pip
RUN python3 -m pip install -U numpy

# Fetch latest edge TPU libs
RUN wget https://dl.google.com/coral/edgetpu_api/edgetpu_api_latest.tar.gz -O edgetpu_api.tar.gz --trust-server-names && \
    tar xzf edgetpu_api.tar.gz && rm edgetpu_api.tar.gz

WORKDIR /usr/src/app/edgetpu_api

# Override the MODEL variable so we can build in a container.
#ENV MODEL="Raspberry Pi 3 Model B Rev"
RUN sed -i "s|MODEL=|#MODEL=|g" install.sh

# Pass N to the prompt in the install script if we want to overclock the tpu
#RUN yes n | ./install.sh

WORKDIR /usr/src/app

COPY models/ models/

COPY src/ src/

COPY run.sh run.sh

# Flip the camera vertically
ENV VFLIP=True

CMD ["bash","run.sh"]
